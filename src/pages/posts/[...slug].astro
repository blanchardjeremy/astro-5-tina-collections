---
import Layout from "@layouts/index.astro";
import PostLayout from "@layouts/PostLayout.tsx";
import { getCollection } from "astro:content";
import type { PostQuery, PostQueryVariables } from "tina/__generated__/types";
import client from "tina/__generated__/client";

export async function getStaticPaths() {
	const posts = await getCollection("posts");

	return posts.map((post) => {
		return {
			params: { slug: post.data.slug },
			props: {
				title: post.data.title,
				getTinaProps: async () => client.queries.post({ relativePath: post.data.tinaInfo.relativePath }),
			},
		};
	});
}


const { title, getTinaProps } = Astro.props;
const tinaProps = await getTinaProps()
---

<Layout title={title}>
	{import.meta.env.NODE_ENV === 'production' ? <PostLayout tinaProps={tinaProps}/> : <PostLayout client:tina tinaProps={tinaProps}  />}
	<p>{import.meta.env.NODE_ENV}</p>
</Layout>
